# -*- coding: utf-8 -*-
"""Cópia de Entrega - Módulo 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16NoIjSAWzEEEfMyeDVVRg5ViseRbQd4A

# **Importando biblitecas**
"""

import pandas as pd # biblioteca para manipulação de dados
import numpy as np # biblioteca para funções de alto nível
import plotly.express as px # biblioteca para criar gráficos dinâmicos
import seaborn as sns # biblioteca para gráficos
import matplotlib.pyplot as plt

dados = pd.read_csv("custo_diaria.csv", sep = ';')

dados.head()

dados.describe()

X = dados['qtd_pessoas'].values
Y = dados['valor_diaria'].values

np.corrcoef(X, Y)

plt.scatter(X,Y,label='Função Y(X)');
plt.xlabel('X');
plt.ylabel('Y');
plt.legend();

X = X.reshape(-1,1)
X

from sklearn.linear_model import LinearRegression
# cria um objeto do tipo regressão linear
previsao_custo_diaria = LinearRegression()

type(previsao_custo_diaria)

previsao_custo_diaria.fit(X, Y)

previsao_custo_diaria.intercept_

previsao_custo_diaria.coef_

previsao_preco = previsao_custo_diaria.predict(X)

X.ravel() # transforma em um vetor para poder fazer a visualização

grafico = px.scatter(x = X.ravel(), y = Y)
grafico

grafico = px.scatter(x = X.ravel(), y = Y)
grafico.add_scatter(x = X.ravel(), y = previsao_preco, name = 'Previsões')
grafico

qtd_pessoas = 50
previsao_custo_diaria.intercept_ + previsao_custo_diaria.coef_ * qtd_pessoas

previsao_custo_diaria.predict([[50]])

previsao_custo_diaria.score(X, Y)

from sklearn.metrics import mean_absolute_error,mean_squared_error

MSE = mean_squared_error(Y, previsao_preco)
MAE = mean_absolute_error(Y, previsao_preco)
RMSE = np.sqrt(MSE)

print("MSE = {:0.2f}".format(MSE))
print("MAE = {:0.2f}".format(MAE))
print("RMSE = {:0.2f}".format(RMSE))

